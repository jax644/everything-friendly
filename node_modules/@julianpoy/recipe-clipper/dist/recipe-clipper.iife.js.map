{"version":3,"file":"recipe-clipper.iife.js","sources":["../src/utils/config.js","../src/constants/badWords.js","../src/constants/regex.js","../src/utils/text.js","../src/utils/innerText.js","../src/utils/element.js","../src/constants/classMatchers.js","../src/utils/ml.js","../src/utils/schema.js","../src/utils/microdata.js","../src/utils/clip.js","../src/index.js"],"sourcesContent":["export const generateConfig = (options) => {\n  // Default structure\n  const config = {\n    window: null,\n    options: {\n      window: null,\n      mlDisable: null,\n      mlModelEndpoint: null,\n      mlClassifyEndpoint: null,\n      ignoreMLClassifyErrors: null,\n    },\n  };\n\n  // Window-based options\n  /* istanbul ignore next */\n  try {\n    if (window) {\n      config.window = window;\n      config.options.window = window;\n      config.options.mlDisable = window.RC_ML_DISABLE || null;\n      config.options.mlModelEndpoint = window.RC_ML_MODEL_ENDPOINT || null;\n      config.options.mlClassifyEndpoint = window.RC_ML_CLASSIFY_ENDPOINT || null;\n      config.options.ignoreMLClassifyErrors = window.RC_IGNORE_ML_CLASSIFY_ERRORS || null;\n    }\n  } catch (_) {\n    // Do nothing\n  }\n\n  // Argument-based options\n  if (options) {\n    config.window = options.window || config.window;\n    config.options = {\n      ...config.options,\n      ...options,\n    };\n  }\n\n  return config;\n};\n","export const generalBadWords = [\n  'instructions',\n  'directions',\n  'procedure',\n  'preparation',\n  'method',\n  'you will need',\n  'how to make it',\n  'ingredients',\n  'total time',\n  'active time',\n  'prep time',\n  'time',\n  'yield',\n  'servings',\n  'notes',\n  'select all ingredients',\n  'select all',\n];\nexport const allRecipesBadWords = [\n  'ingredient checklist',\n  'instructions checklist',\n  'decrease serving',\n  'increase serving',\n  'adjust',\n  'the ingredient list now reflects the servings specified',\n  'footnotes',\n  'i made it  print',\n  'add all ingredients to shopping list',\n];\nexport const tastyRecipesBadWords = [\n  'scale 1x2x3x',\n];\n\nexport const badWords = [\n  generalBadWords,\n  allRecipesBadWords,\n  tastyRecipesBadWords,\n].flat();\n","export const matchYield = /(serves|servings|yield|yields|makes):?\\s*\\d+/i;\n\nexport const matchActiveTime = /(active time|prep time):?\\s*(\\d+ (d(s?)|day(s?)|hour(s?)|hr(s?)|minute(s?)|min(s?))? ?(and)? ?)+/i;\n\nexport const matchTotalTime = /(total time):?\\s*(\\d+ (d(s?)|day(s?)|hour(s?)|hr(s?)|minute(s?)|min(s?))? ?(and)? ?)+/i;\n\n// step 4:\nexport const matchStep = /^(step *)?\\d+:?$/i;\n\n// 1x, 1 x\nexport const matchScale = /^\\d+ *x?$/i;\n\n// total time:\nexport const matchFieldTitles = /^(total time|prep time|active time|yield|servings|serves):? ?/i;\n\nexport const matchSpecialChracters = /[^a-zA-Z0-9 ]/g;\n\nexport const ingredientSectionHeader = /^(ingredients|you will need|ingredient checklist|ingredient list)\\s*:?/gi;\n\nexport const instructionSectionHeader = /^(instructions|instructions checklist|instruction list|how to make it|preparation|steps|method|procedure|directions)\\s*:?/gi;\n","import { badWords } from '../constants/badWords';\nimport {\n  matchStep, matchFieldTitles, matchScale, matchSpecialChracters,\n} from '../constants/regex';\n\nexport const getLongestString = (strings) => strings.reduce((acc, el) => (el.length > acc.length ? el : acc), '');\n\nexport const capitalizeEachWord = (textBlock) => textBlock.split(' ').map((word) => `${word.charAt(0).toUpperCase()}${word.substring(1)}`).join(' ');\n\nexport const removeSpecialCharacters = (line) => line.replace(matchSpecialChracters, '').trim();\n\n// Undesired words\nexport const isBadWord = (line) => badWords.includes(removeSpecialCharacters(line).toLowerCase());\n\n// Digits and steps that sit on their own lines\nexport const isStep = (line) => removeSpecialCharacters(line).match(matchStep);\n\n// Scale buttons/interface that was picked up accidentally (4x)\nexport const isScale = (line) => removeSpecialCharacters(line).match(matchScale);\n\nexport const removeFieldTitles = (line) => line.replace(matchFieldTitles, '').trim();\n\n// Format capitalized lines \"HEADER:\" as [Header] or \"for the xyz\" as [For The Xyz]\nexport const formatHeaders = (line) => (\n  line.trim().match(/^([A-Z] *)+:?$/) || line.trim().match(/^for the ([a-z] *)+:?$/i)\n    ? `[${capitalizeEachWord(line.trim().toLowerCase()).replace(':', '')}]` : line\n);\n\nexport const cleanKnownWords = (textBlock) => textBlock.split('\\n')\n  .map((line) => line.trim())\n  .filter((line) => removeSpecialCharacters(line).length)\n  .filter((line) => !isBadWord(line))\n  .filter((line) => !isStep(line))\n  .filter((line) => !isScale(line))\n  .map((line) => removeFieldTitles(line))\n  .map((line) => formatHeaders(line))\n  .join('\\n');\n\nexport const format = {\n  imageURL: (val) => val.trim(),\n  title: (val) => capitalizeEachWord(val.trim().toLowerCase()),\n  description: (val) => (val.length > 300 ? '' : cleanKnownWords(val)),\n  source: (val) => val.trim(),\n  yield: (val) => (val.length > 30 ? '' : capitalizeEachWord(cleanKnownWords(val).trim().toLowerCase())),\n  activeTime: (val) => (val.length > 30 ? '' : capitalizeEachWord(cleanKnownWords(val).trim().toLowerCase())),\n  totalTime: (val) => (val.length > 30 ? '' : capitalizeEachWord(cleanKnownWords(val).trim().toLowerCase())),\n  ingredients: (val) => cleanKnownWords(val),\n  instructions: (val) => cleanKnownWords(val),\n  notes: (val) => cleanKnownWords(val),\n};\n","export const getInnerText = (element) => element.innerText || element.textContent;\n","import { getInnerText } from './innerText';\n\nexport const getClassNamesMatching = (window, classNamePartial) => {\n  const classRegExp = new RegExp(`class=\"((\\\\w|\\\\s|-)*${classNamePartial}(\\\\w|\\\\s|-)*)\"`, 'gi');\n  const matches = window.document.body.innerHTML.matchAll(classRegExp);\n\n  return Array.from(new Set(Array.from(matches, (match) => match[1])));\n};\n\nexport const getClassNamesContaining = (window, className) => {\n  const classRegExp = new RegExp(`class=\"(([\\\\w-\\\\s]*\\\\s)?${className}(\\\\s[\\\\w-\\\\s]*)?)\"`, 'gi');\n  const matches = window.document.body.innerHTML.matchAll(classRegExp);\n\n  return Array.from(new Set(Array.from(matches, (match) => match[1])));\n};\n\nexport const softMatchElementsByClass = (window, classNamePartial) => {\n  const classNames = getClassNamesMatching(window, classNamePartial);\n\n  return classNames\n    .map((className) => Array.from(window.document.getElementsByClassName(className)))\n    .flat();\n};\n\nexport const matchElementsByClass = (window, classNameFull) => {\n  const classNames = getClassNamesContaining(window, classNameFull);\n\n  return classNames\n    .map((className) => Array.from(window.document.getElementsByClassName(className)))\n    .flat();\n};\n\nexport const applyLIBlockStyling = (element) => {\n  Array.from(element.querySelectorAll('li')).forEach((li) => {\n    li.style.display = 'block';\n  });\n\n  return element;\n};\n\nexport const grabLongestMatchByClasses = (window, preferredClassNames, fuzzyClassNames) => {\n  const exactMatches = preferredClassNames\n    .map((className) => matchElementsByClass(window, className))\n    .flat();\n  const fuzzyMatches = fuzzyClassNames\n    .map((className) => softMatchElementsByClass(window, className))\n    .flat();\n\n  return (exactMatches.length > 0 ? exactMatches : fuzzyMatches)\n    .map((element) => applyLIBlockStyling(element))\n    .map((element) => getInnerText(element).trim())\n    .reduce((max, match) => (match.length > max.length ? match : max), '');\n};\n\nexport const isImg = (element) => element.tagName.toLowerCase().trim() === 'img';\nexport const isPicture = (element) => element.tagName.toLowerCase().trim() === 'picture';\n\nexport const getImgElementsWithin = (element) => {\n  const matchedImgElements = [];\n  if (isImg(element)) matchedImgElements.push(element);\n  matchedImgElements.push(...element.querySelectorAll('img'));\n  return matchedImgElements;\n};\n\nexport const getAttrIfExists = (el, attrName) => {\n  if (el.attributes[attrName]) return el.attributes[attrName].value;\n  return '';\n};\n\nexport const getSrcFromImage = (img) => {\n  if (!img) return '';\n\n  const closestSrc = getAttrIfExists(img, 'data-src') || getAttrIfExists(img, 'data-lazy-src') || img.currentSrc || img.src;\n  return closestSrc || '';\n};\n\nexport const isValidImage = (element) => isImg(element)\n    && !!getSrcFromImage(element)\n    && element.complete // Filter images that haven't completely loaded\n    && element.naturalWidth > 0 // Filter images that haven't loaded correctly\n    && element.naturalHeight > 0;\n\nexport const getImageDimensions = (element) => {\n  const parent = element.parentNode;\n  const isParentPicture = parent && isPicture(parent);\n  const offsetHeight = isParentPicture\n    ? Math.max(element.offsetHeight, parent.offsetHeight) : element.offsetHeight;\n  const offsetWidth = isParentPicture\n    ? Math.max(element.offsetWidth, parent.offsetWidth) : element.offsetWidth;\n\n  return {\n    offsetHeight,\n    offsetWidth,\n  };\n};\n\nexport const grabLargestImage = (window) => {\n  const matches = window.document.querySelectorAll('img');\n\n  return [...matches]\n    .filter((element) => isValidImage(element))\n    .reduce((max, element) => {\n      const { offsetWidth, offsetHeight } = getImageDimensions(element);\n\n      // Do not use images smaller than 200x200\n      if (offsetWidth < 200 && offsetHeight < 200) return max;\n\n      const elTotalPx = offsetHeight * offsetWidth;\n      const maxTotalPx = max ? (max.offsetHeight * max.offsetWidth) : 0;\n\n      return elTotalPx > maxTotalPx ? element : max;\n    }, null);\n};\n\nexport const closestToRegExp = (window, regExp) => {\n  const { body } = window.document;\n  const match = getInnerText(body).match(regExp);\n  if (!match) return '';\n  return match[0];\n};\n\nexport const grabRecipeTitleFromDocumentTitle = (window) => window.document.title.split(/ - |\\|/)[0].trim();\n\nexport const grabSourceFromDocumentTitle = (window) => (window.document.title.split(/ - |\\|/)[1] || '').trim();\n","// Class matchers are sorted by field. Each field contains a set of exact matchers,\n// and a set of fuzzy fallback matchers\n// For example:\n// imageURL: [ [exact], [fuzzy fallback] ]\n// Clipper will search for exact matchers _exactly_ within the document\n// Clipper will search for any element that has a class that contains the fuzzy name\n\nconst classMatchers = {\n  imageURL: [\n    [\n      'wprm-recipe-image', // Wordpress recipe embed tool - https://panlasangpinoy.com/leche-flan/\n      'tasty-recipes-image', // TastyRecipes recipe embed tool - https://sallysbakingaddiction.com/quiche-recipe/\n      'hero-photo', // AllRecipes - https://www.allrecipes.com/recipe/231244/asparagus-mushroom-bacon-crustless-quiche/\n      'o-RecipeLead__m-RecipeMedia', // FoodNetwork - https://www.foodnetwork.com/recipes/paula-deen/spinach-and-bacon-quiche-recipe-2131172\n      'recipe-lede-image', // Delish - https://www.delish.com/cooking/recipe-ideas/a25648042/crustless-quiche-recipe/\n      'recipe-body', // Generic, idea from Delish - https://www.delish.com/cooking/recipe-ideas/a25648042/crustless-quiche-recipe/\n      'recipe__hero', // Food52 - https://food52.com/recipes/81867-best-quiche-recipe\n      'content', // Generic, recognize content-body if matched directly\n    ],\n    [\n      'recipe-image',\n      'hero',\n      'recipe-content', // Generic, search for largest image within any recipe content block\n      'recipe-body', // Generic, search for largest image within any recipe content block\n      'recipe-intro', // Generic, search for largest image within any recipe content block\n      'recipe-', // Generic, search for largest image within any recipe content block\n    ],\n  ],\n  title: [\n    [\n      'wprm-recipe-name', // Wordpress recipe embed tool - https://panlasangpinoy.com/leche-flan/\n    ],\n    [\n      'recipename',\n      'recipe-name',\n      'recipetitle',\n      'recipe-title',\n    ],\n  ],\n  description: [\n    [\n      'wprm-recipe-summary', // Wordpress recipe embed tool - https://panlasangpinoy.com/leche-flan/\n    ],\n    [],\n  ],\n  yield: [\n    ['recipe-yield', 'recipe-servings', 'yield', 'servings'],\n    ['yield', 'servings'],\n  ],\n  activeTime: [\n    ['activeTime', 'active-time', 'prep-time', 'time-active', 'time-prep'],\n    ['activeTime', 'active-time', 'prep-time', 'time-active', 'time-prep'],\n  ],\n  totalTime: [\n    ['totalTime', 'total-time', 'time-total'],\n    ['totalTime', 'total-time', 'time-total'],\n  ],\n  ingredients: [\n    [\n      'wprm-recipe-ingredients-container', // Wordpress recipe embed tool - https://panlasangpinoy.com/leche-flan/\n      'wprm-recipe-ingredients', // Wordpress recipe embed tool - https://panlasangpinoy.com/leche-flan/\n      'tasty-recipes-ingredients', // Tasty recipes embed tool - https://myheartbeets.com/paleo-tortilla-chips/\n      'o-Ingredients', // FoodNetwork - https://www.foodnetwork.com/recipes/paula-deen/spinach-and-bacon-quiche-recipe-2131172\n      'recipe-ingredients',\n      'recipe-ingredients-section', // Taste.com.au - https://www.taste.com.au/recipes/healthy-feta-mint-beef-patties-griled-vegies-hummus-recipe/pxacqmfu?r=recipes/dinnerrecipesfortwo&c=1j53ce29/Dinner%20recipes%20for%20two\n      'ingredientlist',\n      'ingredient-list',\n    ],\n    [\n      'ingredients',\n      'ingredientlist',\n      'ingredient-list',\n    ],\n  ],\n  instructions: [\n    [\n      'wprm-recipe-instructions', // Wordpress recipe embed tool - https://panlasangpinoy.com/leche-flan/\n      'tasty-recipes-instructions', // Tasty recipes embed tool - https://myheartbeets.com/paleo-tortilla-chips/\n      'recipe-directions__list', // AllRecipes - https://www.allrecipes.com/recipe/231244/asparagus-mushroom-bacon-crustless-quiche/\n      'o-Method', // FoodNetwork - https://www.foodnetwork.com/recipes/paula-deen/spinach-and-bacon-quiche-recipe-2131172\n      'steps-area', // Bon Appetit - https://www.bonappetit.com/recipe/chocolate-babka\n      'recipe-method-section', // Taste.com.au - https://www.taste.com.au/recipes/healthy-feta-mint-beef-patties-griled-vegies-hummus-recipe/pxacqmfu?r=recipes/dinnerrecipesfortwo&c=1j53ce29/Dinner%20recipes%20for%20two\n\n      'recipe__list--steps', // Food52.com - https://food52.com/recipes/81867-best-quiche-recipe\n      'recipesteps', // BettyCrocker.com - https://www.bettycrocker.com/recipes/ultimate-chocolate-chip-cookies/77c14e03-d8b0-4844-846d-f19304f61c57\n      'recipe-steps', // Generic\n      'instructionlist', // Generic\n      'instruction-list', // Bon Appetit - https://www.bonappetit.com/recipe/extra-corny-cornbread-muffins\n      'directionlist', // Generic\n      'direction-list', // https://leitesculinaria.com/10114/recipes-portuguese_sausage_frittata.html\n      'preparationsteps', // Generic\n      'preparation-steps', // https://www.maangchi.com/recipe/kimchi-bokkeumbap\n      'prepsteps', // Generic\n      'prep-steps', // https://tasty.co/recipe/one-pan-baby-back-ribs\n      'recipeinstructions', // Generic\n      'recipe-instructions', // Generic\n      'recipemethod', // Generic\n      'recipe-method', // Generic\n      'directions', // Generic\n      'instructions', // Generic\n    ],\n    [\n      'instructionlist',\n      'instruction-list',\n      'preparationsteps',\n      'preparation-steps',\n      'directionlist',\n      'direction-list',\n      'recipesteps',\n      'recipe-steps',\n      'recipemethod',\n      'recipe-method',\n      'directions',\n      'instructions',\n    ],\n  ],\n  notes: [\n    [\n      'notes', // Generic\n      'recipenotes', // Generic\n      'recipe-notes', // Generic\n      'recipefootnotes', // Generic\n      'recipe-footnotes', // Generic\n      'recipe__tips', // King Arthur Flour - https://www.kingarthurflour.com/recipes/chocolate-cake-recipe\n      'wprm-recipe-notes-container', // Wordpress recipe embed tool - https://panlasangpinoy.com/leche-flan/\n    ],\n    [\n      'recipenotes',\n      'recipe-notes',\n      'recipefootnotes',\n      'recipe-footnotes',\n    ],\n  ],\n};\n\nexport default classMatchers;\n","// Self import for mock\nimport * as self from './ml';\nimport { getInnerText } from './innerText';\nimport {\n  applyLIBlockStyling,\n} from './element';\nimport {\n  ingredientSectionHeader,\n  instructionSectionHeader,\n} from '../constants/regex';\n\nexport const getDocumentContent = (config) => {\n  const { body } = config.window.document;\n  applyLIBlockStyling(body);\n\n  return getInnerText(body).split('\\n').map((line) => line.trim()).filter((line) => line);\n};\n\nexport const findPotentialSetsByHeader = (config, headerRegexp) => {\n  const content = self.getDocumentContent(config);\n\n  return content.filter((line) => line.match(headerRegexp))\n    .map((line) => content.slice(content.indexOf(line) + 1));\n};\n\nexport const loadModel = async (config) => {\n  const modelUrl = config.options.mlModelEndpoint;\n  if (!modelUrl) throw new Error('You must provide window.RC_ML_MODEL_ENDPOINT or options.mlModelEndpoint to use local classification');\n  return config.window.tf.loadLayersModel(modelUrl);\n};\n\nexport const mlClassifyLocal = async (config, lines) => {\n  const model = await self.loadModel(config);\n  const useModel = await config.window.use.load();\n\n  const predictions = [];\n  for (let i = 0; i < lines.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    const encodedData = await useModel.embed([lines[i]]);\n    const prediction = model.predict(encodedData).dataSync();\n    predictions.push(prediction);\n  }\n\n  return predictions;\n};\n\nexport const mlClassifyRemote = async (config, lines) => {\n  const remote = config.options.mlClassifyEndpoint;\n  if (!remote) throw new Error('You must provide window.RC_ML_CLASSIFY_ENDPOINT or options.mlClassifyEndpoint to use remote classification');\n\n  const response = await config.window.fetch(remote, {\n    method: 'POST',\n    body: JSON.stringify({\n      sentences: lines,\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  return response.json();\n};\n\nexport const mlClassify = async (config, lines) => {\n  const isTFJSAvailable = config.window.tf && config.window.tf.loadLayersModel;\n  const isUSEAvailable = config.window.use && config.window.use.load;\n\n  if (isTFJSAvailable && isUSEAvailable) return self.mlClassifyLocal(config, lines);\n  return self.mlClassifyRemote(config, lines);\n};\n\nexport const mlFilter = async (config, lines, type) => {\n  const predictions = await self.mlClassify(config, lines);\n\n  let lastType = -1;\n  const filteredOutput = [];\n  for (let i = 0; i < lines.length; i += 1) {\n    const predictedType = predictions[i].indexOf(Math.max(...predictions[i])) + 1;\n\n    // Allow one line of error to be included\n    // (say, an ingredient header or a stray bit of formatting)\n    // Also allow some non-ingredient text at the very start (say, a section header)\n    if (predictedType === type || lastType === type || i === 0) {\n      filteredOutput.push(lines[i]);\n      lastType = predictedType;\n    } else {\n      break;\n    }\n  }\n\n  // Remove last element if it is not of the desired type\n  // (consider our allowed buffer above may insert one undesired item at end)\n  if (filteredOutput.length > 0 && lastType !== type) {\n    filteredOutput.pop();\n  }\n\n  return filteredOutput;\n};\n\nexport const findFullSearch = async (config, type) => {\n  const content = self.getDocumentContent(config);\n\n  const predictions = await self.mlClassify(config, content);\n\n  const { groups, workingGroup } = content.reduce((acc, line, idx) => {\n    const predictedType = predictions[idx].indexOf(Math.max(...predictions[idx])) + 1;\n\n    const lastType = acc.workingGroup\n      && acc.workingGroup.length > 0 ? acc.workingGroup[acc.workingGroup.length - 1].type : -1;\n\n    // Allow one line of error to be included in group\n    // (say, an ingredient header or a stray bit of formatting)\n    // Also allow some non-ingredient text at the very start (say, a section header)\n    if (predictedType === type || lastType === type || idx === 0) {\n      acc.workingGroup = acc.workingGroup || [];\n      acc.workingGroup.push({\n        text: line,\n        type: predictedType,\n      });\n    } else {\n      // Group is considered complete\n      if (acc.workingGroup && acc.workingGroup.length > 0) acc.groups.push(acc.workingGroup);\n      acc.workingGroup = null;\n    }\n\n    return acc;\n  }, {\n    workingGroup: null,\n    groups: [],\n  });\n\n  // If leftover working group (if ingredients/instructions end at very end of page)\n  if (workingGroup) groups.push(workingGroup);\n\n  groups.forEach((group) => {\n    // Remove last element if it is not of the desired type\n    // (consider our allowed buffer above may insert one undesired item at end)\n    if (group.length > 0 && group[group.length - 1].type !== type) {\n      group.pop();\n    }\n  });\n\n  return groups\n    .map((group) => group.map((item) => item.text))\n    .map((group) => group.join('\\n'))\n    .reduce((a, b) => (a.length > b.length ? a : b), '');\n};\n\nexport const findByHeader = async (config, type) => {\n  const headerRegexp = type === 1 ? ingredientSectionHeader : instructionSectionHeader;\n  const potentialSets = self.findPotentialSetsByHeader(config, headerRegexp);\n\n  const sets = [];\n  for (let i = 0; i < potentialSets.length; i += 1) {\n    const potentialSet = potentialSets[i];\n    // eslint-disable-next-line no-await-in-loop\n    const set = await self.mlFilter(config, potentialSet, type);\n    sets.push(set);\n  }\n\n  return sets.map((set) => set.join('\\n'))\n    .reduce((a, b) => (a.length > b.length ? a : b), '');\n};\n\nexport const find = async (config, type) => {\n  if (config.options.mlDisable) return '';\n\n  const result = await self.findByHeader(config, type) || await self.findFullSearch(config, type);\n\n  return result;\n};\n\n// Type 1 for ingredients\n// Type 2 for instructions\n// Others to be implemented in future...\nexport const grabByMl = async (config, type) => {\n  try {\n    return await self.find(config, type);\n  } catch (e) {\n    if (config.options.ignoreMLClassifyErrors) {\n      return '';\n    }\n\n    throw e;\n  }\n};\n","import * as self from './schema';\nimport { getInnerText } from './innerText';\nimport { getLongestString } from './text';\n\nexport const getRecipeSchemasFromDocument = (window) => {\n  const schemas = [...window.document.querySelectorAll('script[type=\"application/ld+json\"]')]\n    .map((schema) => {\n      try {\n        return JSON.parse(getInnerText(schema));\n      } catch (e) {\n        // Do nothing\n      }\n\n      return null;\n    })\n    .filter((e) => e);\n\n  const recipeSchemas = schemas.map((schema) => {\n    // Schemas that evaluate to a graph\n    if (schema['@graph']) {\n      return schema['@graph'].find((subSchema) => subSchema['@type'] === 'Recipe');\n    }\n\n    // Schemas that are directly embedded\n    if (schema['@type'] === 'Recipe') return schema;\n\n    // Schemas that evaluate to an array\n    if (schema.length && schema[0]) {\n      return schema.find((subSchema) => subSchema['@type'] === 'Recipe');\n    }\n\n    return null;\n  }).filter((e) => e);\n\n  return recipeSchemas;\n};\n\nexport const getPropertyFromSchema = (window, propName) => {\n  if (!window.parsedSchemas) window.parsedSchemas = self.getRecipeSchemasFromDocument(window);\n\n  const foundSchema = window.parsedSchemas.find((schema) => schema[propName]) || {};\n\n  return foundSchema[propName] || null;\n};\n\nexport const getImageSrcFromSchema = (window) => {\n  const images = self.getPropertyFromSchema(window, 'image');\n  if (!images) return '';\n\n  let imageSrc;\n  if (typeof images === 'string') imageSrc = images;\n  else if (typeof images.url === 'string') imageSrc = images.url;\n  else if (typeof images[0] === 'string') [imageSrc] = images;\n  else if (images[0] && typeof images[0].url === 'string') imageSrc = images[0].url;\n\n  if (imageSrc) {\n    try {\n      const url = new URL(imageSrc);\n\n      if (url.protocol === 'http:' || url.protocol === 'https:') return imageSrc;\n    } catch (_) {\n      // Do nothing\n    }\n  }\n\n  return '';\n};\n\nexport const getTitleFromSchema = (window) => {\n  const title = self.getPropertyFromSchema(window, 'name');\n\n  if (typeof title === 'string') return title;\n\n  return '';\n};\n\nexport const getDescriptionFromSchema = (window) => {\n  const description = self.getPropertyFromSchema(window, 'description');\n\n  if (typeof description === 'string') return description;\n\n  return '';\n};\n\nexport const getYieldFromSchema = (window) => {\n  const recipeYield = self.getPropertyFromSchema(window, 'recipeYield');\n  if (!recipeYield) return '';\n\n  if (typeof recipeYield === 'string') return recipeYield;\n  if (typeof recipeYield[0] === 'string') return getLongestString(recipeYield);\n\n  return '';\n};\n\n/**\n * Useful for breaking down:\n * Recipe.recipeIngredient (https://schema.org/recipeIngredient)\n * Recipe.recipeInstructions (https://schema.org/recipeInstructions)\n * Which can both often be provided as a string, array, or list of more objects within.\n */\nexport const getTextFromSchema = (schema) => {\n  if (typeof schema === 'string') return schema;\n  if (Array.isArray(schema)) {\n    return schema.map((item) => {\n      if (typeof item === 'string') return item;\n      if (typeof item === 'object') {\n        if (item.text) return item.text;\n        if (item.itemListElement) return getTextFromSchema(item.itemListElement);\n      }\n\n      return undefined;\n    }).filter((el) => el !== null && el !== undefined).join('\\n');\n  }\n\n  return '';\n};\n\nexport const getInstructionsFromSchema = (window) => {\n  const instructions = self.getPropertyFromSchema(window, 'recipeInstructions');\n  if (!instructions) return '';\n\n  return self.getTextFromSchema(instructions);\n};\n\nexport const getIngredientsFromSchema = (window) => {\n  const ingredients = self.getPropertyFromSchema(window, 'recipeIngredient');\n  if (!ingredients) return '';\n\n  return self.getTextFromSchema(ingredients);\n};\n","import * as self from './microdata';\nimport { getInnerText } from './innerText';\nimport { getLongestString } from './text';\n\nexport const getLongestTextForQueries = (window, queries) => {\n  const vals = queries\n    .map((query) => [...window.document.querySelectorAll(query)])\n    .flat()\n    .map((el) => getInnerText(el));\n\n  return getLongestString(vals);\n};\n\nexport const getActiveTimeFromMicrodata = (window) => self.getLongestTextForQueries(window, [\n  '[itemProp=prepTime]',\n]);\n\nexport const getTotalTimeFromMicrodata = (window) => self.getLongestTextForQueries(window, [\n  '[itemProp=totalTime]',\n]);\n\nexport const getYieldFromMicrodata = (window) => self.getLongestTextForQueries(window, [\n  '[itemProp=recipeYield]',\n]);\n\nexport const getInstructionsFromMicrodata = (window) => self.getLongestTextForQueries(window, [\n  '[itemProp=recipeInstructions]',\n  '[itemProp=instructions]',\n]);\n\nexport const getIngredientsFromMicrodata = (window) => self.getLongestTextForQueries(window, [\n  '[itemProp=recipeIngredients]',\n  '[itemProp=ingredients]',\n]);\n","import { format } from './text';\nimport {\n  getSrcFromImage,\n  grabLargestImage,\n  grabLongestMatchByClasses,\n  closestToRegExp,\n  grabRecipeTitleFromDocumentTitle,\n  grabSourceFromDocumentTitle,\n} from './element';\nimport ClassMatchers from '../constants/classMatchers';\nimport {\n  matchYield,\n  matchActiveTime,\n  matchTotalTime,\n} from '../constants/regex';\nimport {\n  grabByMl,\n} from './ml';\nimport {\n  getImageSrcFromSchema,\n  getTitleFromSchema,\n  getDescriptionFromSchema,\n  getYieldFromSchema,\n  getIngredientsFromSchema,\n  getInstructionsFromSchema,\n} from './schema';\nimport {\n  getYieldFromMicrodata,\n  getActiveTimeFromMicrodata,\n  getTotalTimeFromMicrodata,\n  getIngredientsFromMicrodata,\n  getInstructionsFromMicrodata,\n} from './microdata';\n\nexport const clipImageURL = (config) => format.imageURL(\n  getImageSrcFromSchema(config.window)\n  || getSrcFromImage(grabLargestImage(config.window)),\n);\n\nexport const clipTitle = (config) => format.title(\n  getTitleFromSchema(config.window)\n  || grabLongestMatchByClasses(config.window, ...ClassMatchers.title)\n  || grabRecipeTitleFromDocumentTitle(config.window),\n);\n\nexport const clipDescription = (config) => format.description(\n  getDescriptionFromSchema(config.window)\n  || grabLongestMatchByClasses(config.window, ...ClassMatchers.description),\n);\n\nexport const clipSource = (config) => format.source(\n  grabSourceFromDocumentTitle(config.window) || config.window.location.hostname,\n);\n\nexport const clipYield = (config) => format.yield(\n  getYieldFromSchema(config.window)\n  || getYieldFromMicrodata(config.window)\n  || grabLongestMatchByClasses(config.window, ...ClassMatchers.yield)\n  || closestToRegExp(config.window, matchYield).replace('\\n', ''),\n);\n\nexport const clipActiveTime = (config) => format.activeTime(\n  getActiveTimeFromMicrodata(config.window)\n  || grabLongestMatchByClasses(config.window, ...ClassMatchers.activeTime)\n  || closestToRegExp(config.window, matchActiveTime).replace('\\n', ''),\n);\n\nexport const clipTotalTime = (config) => format.totalTime(\n  getTotalTimeFromMicrodata(config.window)\n  || grabLongestMatchByClasses(config.window, ...ClassMatchers.totalTime)\n  || closestToRegExp(config.window, matchTotalTime).replace('\\n', ''),\n);\n\nexport const clipIngredients = async (config) => format.ingredients(\n  getIngredientsFromSchema(config.window)\n  || getIngredientsFromMicrodata(config.window)\n  || grabLongestMatchByClasses(config.window, ...ClassMatchers.ingredients),\n)\n  || format.ingredients(await grabByMl(config, 1));\n\nexport const clipInstructions = async (config) => format.instructions(\n  getInstructionsFromSchema(config.window)\n  || getInstructionsFromMicrodata(config.window)\n  || grabLongestMatchByClasses(config.window, ...ClassMatchers.instructions),\n)\n  || format.instructions(await grabByMl(config, 2));\n\nexport const clipNotes = (config) => format.notes(\n  grabLongestMatchByClasses(config.window, ...ClassMatchers.notes),\n);\n","import { generateConfig } from './utils/config';\nimport * as ClipUtils from './utils/clip';\n\nexport const clipRecipe = async (options) => {\n  const config = generateConfig(options);\n\n  return {\n    imageURL: ClipUtils.clipImageURL(config),\n    title: ClipUtils.clipTitle(config),\n    description: ClipUtils.clipDescription(config),\n    source: ClipUtils.clipSource(config),\n    yield: ClipUtils.clipYield(config),\n    activeTime: ClipUtils.clipActiveTime(config),\n    totalTime: ClipUtils.clipTotalTime(config),\n    ingredients: await ClipUtils.clipIngredients(config),\n    instructions: await ClipUtils.clipInstructions(config),\n    notes: ClipUtils.clipNotes(config),\n  };\n};\n"],"names":["generateConfig","options","config","window","mlDisable","mlModelEndpoint","mlClassifyEndpoint","ignoreMLClassifyErrors","RC_ML_DISABLE","RC_ML_MODEL_ENDPOINT","RC_ML_CLASSIFY_ENDPOINT","RC_IGNORE_ML_CLASSIFY_ERRORS","_","generalBadWords","allRecipesBadWords","tastyRecipesBadWords","badWords","flat","matchYield","matchActiveTime","matchTotalTime","matchStep","matchScale","matchFieldTitles","matchSpecialChracters","ingredientSectionHeader","instructionSectionHeader","getLongestString","strings","reduce","acc","el","length","capitalizeEachWord","textBlock","split","map","word","charAt","toUpperCase","substring","join","removeSpecialCharacters","line","replace","trim","isBadWord","includes","toLowerCase","isStep","match","isScale","removeFieldTitles","formatHeaders","cleanKnownWords","filter","format","imageURL","val","title","description","source","yield","activeTime","totalTime","ingredients","instructions","notes","getInnerText","element","innerText","textContent","getClassNamesMatching","classNamePartial","classRegExp","RegExp","matches","document","body","innerHTML","matchAll","Array","from","Set","getClassNamesContaining","className","softMatchElementsByClass","classNames","getElementsByClassName","matchElementsByClass","classNameFull","applyLIBlockStyling","querySelectorAll","forEach","li","style","display","grabLongestMatchByClasses","preferredClassNames","fuzzyClassNames","exactMatches","fuzzyMatches","max","isImg","tagName","isPicture","getAttrIfExists","attrName","attributes","value","getSrcFromImage","img","closestSrc","currentSrc","src","isValidImage","complete","naturalWidth","naturalHeight","getImageDimensions","parent","parentNode","isParentPicture","offsetHeight","Math","offsetWidth","grabLargestImage","elTotalPx","maxTotalPx","closestToRegExp","regExp","grabRecipeTitleFromDocumentTitle","grabSourceFromDocumentTitle","classMatchers","getDocumentContent","findPotentialSetsByHeader","headerRegexp","content","self","slice","indexOf","loadModel","modelUrl","Error","tf","loadLayersModel","mlClassifyLocal","lines","model","useModel","use","load","predictions","i","encodedData","embed","prediction","predict","dataSync","push","mlClassifyRemote","remote","response","fetch","method","JSON","stringify","sentences","headers","json","mlClassify","isTFJSAvailable","isUSEAvailable","mlFilter","type","lastType","filteredOutput","predictedType","pop","findFullSearch","groups","workingGroup","idx","text","group","item","a","b","findByHeader","potentialSets","sets","potentialSet","set","find","result","grabByMl","e","getRecipeSchemasFromDocument","schemas","schema","parse","recipeSchemas","subSchema","getPropertyFromSchema","propName","parsedSchemas","foundSchema","getImageSrcFromSchema","images","imageSrc","url","URL","protocol","getTitleFromSchema","getDescriptionFromSchema","getYieldFromSchema","recipeYield","getTextFromSchema","isArray","itemListElement","undefined","getInstructionsFromSchema","getIngredientsFromSchema","getLongestTextForQueries","queries","vals","query","getActiveTimeFromMicrodata","getTotalTimeFromMicrodata","getYieldFromMicrodata","getInstructionsFromMicrodata","getIngredientsFromMicrodata","clipImageURL","clipTitle","ClassMatchers","clipDescription","clipSource","location","hostname","clipYield","clipActiveTime","clipTotalTime","clipIngredients","clipInstructions","clipNotes","clipRecipe","ClipUtils"],"mappings":"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"}